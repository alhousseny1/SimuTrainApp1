// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SimuTrainApp.Data;

#nullable disable

namespace SimuTrainApp.Migrations
{
    [DbContext(typeof(DBContext))]
    [Migration("20230117095021_CreateDb")]
    partial class CreateDb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SimuTrainApp.Models.Parcel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("IdStation")
                        .HasColumnType("int");

                    b.Property<int>("IdTrain")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdStation");

                    b.HasIndex("IdTrain");

                    b.ToTable("Parcel");
                });

            modelBuilder.Entity("SimuTrainApp.Models.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("IdStation")
                        .HasColumnType("int");

                    b.Property<int?>("IdTrain")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdStation");

                    b.HasIndex("IdTrain");

                    b.ToTable("Person");
                });

            modelBuilder.Entity("SimuTrainApp.Models.RouteOfTrain", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("NbRoute")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("RouteOfTrain");
                });

            modelBuilder.Entity("SimuTrainApp.Models.Station", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdRoute")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Place")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("IdRoute");

                    b.ToTable("Station");
                });

            modelBuilder.Entity("SimuTrainApp.Models.Train", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<int>("IdRoute")
                        .HasColumnType("int");

                    b.Property<string>("Matricule")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Speed")
                        .HasColumnType("int");

                    b.Property<int?>("StationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdRoute");

                    b.HasIndex("StationId");

                    b.ToTable("Train");
                });

            modelBuilder.Entity("SimuTrainApp.Models.Parcel", b =>
                {
                    b.HasOne("SimuTrainApp.Models.Station", "CurrentStation")
                        .WithMany("Parcels")
                        .HasForeignKey("IdStation");

                    b.HasOne("SimuTrainApp.Models.Train", "CurrentTrain")
                        .WithMany("Parcels")
                        .HasForeignKey("IdTrain")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CurrentStation");

                    b.Navigation("CurrentTrain");
                });

            modelBuilder.Entity("SimuTrainApp.Models.Person", b =>
                {
                    b.HasOne("SimuTrainApp.Models.Station", "CurrentStation")
                        .WithMany("Passengers")
                        .HasForeignKey("IdStation");

                    b.HasOne("SimuTrainApp.Models.Train", "CurrentTrain")
                        .WithMany("Passengers")
                        .HasForeignKey("IdTrain");

                    b.Navigation("CurrentStation");

                    b.Navigation("CurrentTrain");
                });

            modelBuilder.Entity("SimuTrainApp.Models.Station", b =>
                {
                    b.HasOne("SimuTrainApp.Models.RouteOfTrain", "Route")
                        .WithMany("StopStations")
                        .HasForeignKey("IdRoute")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Route");
                });

            modelBuilder.Entity("SimuTrainApp.Models.Train", b =>
                {
                    b.HasOne("SimuTrainApp.Models.RouteOfTrain", "RouteOfTrain")
                        .WithMany()
                        .HasForeignKey("IdRoute")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SimuTrainApp.Models.Station", null)
                        .WithMany("TrainsInStation")
                        .HasForeignKey("StationId");

                    b.Navigation("RouteOfTrain");
                });

            modelBuilder.Entity("SimuTrainApp.Models.RouteOfTrain", b =>
                {
                    b.Navigation("StopStations");
                });

            modelBuilder.Entity("SimuTrainApp.Models.Station", b =>
                {
                    b.Navigation("Parcels");

                    b.Navigation("Passengers");

                    b.Navigation("TrainsInStation");
                });

            modelBuilder.Entity("SimuTrainApp.Models.Train", b =>
                {
                    b.Navigation("Parcels");

                    b.Navigation("Passengers");
                });
#pragma warning restore 612, 618
        }
    }
}
